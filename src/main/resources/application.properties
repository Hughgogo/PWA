#mysql connection
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://34.76.66.56:3306/litfire
#spring.datasource.username=root
#spring.datasource.password=hughgogolitfire



spring.cloud.gcp.sql.database-name=litfire
spring.cloud.gcp.sql.instance-connection-name=litfire-343812:europe-west1:hughgogolitfire

# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always

# Leave empty for root, uncomment and fill out if you specified a user
spring.datasource.username=root

# Uncomment if root password is specified
spring.datasource.password=123

#spring.cloud.gcp.project-id=
#spring.cloud.gcp.credentials.location=file:/path/to/service-account.json



#stastatic resource prefix
spring.mvc.static-path-pattern=/static/**

#Github Oauth 2.0 login setting
#spring.security.oauth2.client.registration.github.clientId=952bf0f199c4f4028dc8
#spring.security.oauth2.client.registration.github.clientSecret=405e4347d9fddc1102174f10762a50746ea6d583
#spring.security.oauth2.client.registration.github.redirectUri=http://localhost:8080/login/oauth2/code/github



#Github Oauth 2.0 login setting
spring.security.oauth2.client.registration.github.clientId=75c0f4b015c124cec82a
spring.security.oauth2.client.registration.github.clientSecret=14ad27487cfb4fdf3fc10762342a7fe49fe14810
spring.security.oauth2.client.registration.github.redirectUri=https://hughgogo.com/login/oauth2/code/github

#Google Oauth 2.0 login setting
spring.security.oauth2.client.registration.google.clientId=1081841794712-kb67meic1lvgje4q1m450vi7dno8c34h.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.redirectUri=https://hughgogo.com/login/oauth2/code/google



